class Calculator:
    def __init__(self):
        self.stack = []
        self.output = []
    def precedence(self, op):
        return {'+': 1, '-': 1, '*': 2, '/': 2}.get(op, 0)
    def push_operator(self, op):
        while self.stack and self.precedence(self.stack[-1]) >= self.precedence(op):
            self.output.append(self.stack.pop())
        self.stack.append(op)
    def push_operand(self, operand):
        self.output.append(operand)
    def infix_to_postfix(self, expression):
        for token in expression:
            if token.isnumeric():
                self.push_operand(token)
            elif token in "+-*/":
                self.push_operator(token)
            elif token == '(':
                self.stack.append(token)
            elif token == ')':
                while self.stack and self.stack[-1] != '(':
                    self.output.append(self.stack.pop())
                self.stack.pop()
        while self.stack:
            self.output.append(self.stack.pop())
        return " ".join(self.output)
calc = Calculator()
expression = "3 + 5 * ( 2 - 8 )".split()
postfix = calc.infix_to_postfix(expression)
print("Postfix Expression:", postfix)
