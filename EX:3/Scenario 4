class InquiryNode:
    def __init__(self, inquiry):
        self.inquiry = inquiry       
     self.next = None
class InquiryQueue:
    def __init__(self):
        self.front = None
        self.rear = None
    def add_inquiry(self, inquiry):
        new_inquiry = InquiryNode(inquiry)
        if not self.rear:
            self.front = self.rear = new_inquiry
        else:
            self.rear.next = new_inquiry
            self.rear = new_inquiry
        print(f"Inquiry added: {inquiry}")
    def resolve_inquiry(self):
        if not self.front:
            print("No inquiries to resolve.")
            return None
        resolved_inquiry = self.front.inquiry
        self.front = self.front.next
        if not self.front:
            self.rear = None
        print(f"Resolving inquiry: {resolved_inquiry}")
        return resolved_inquiry
    def display_inquiries(self):
        if not self.front:
            print("No inquiries in the queue.")
        else:
            print("Current inquiries:")
            current = self.front
            while current:
                print(f"- {current.inquiry}")
                current = current.next
service_system = InquiryQueue()
service_system.add_inquiry("Inquiry about product features")
service_system.add_inquiry("Inquiry about delivery status")
service_system.display_inquiries()
service_system.resolve_inquiry()
service_system.display_inquiries()
